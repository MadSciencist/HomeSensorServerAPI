// <auto-generated />
using System;
using HomeSensorServerAPI.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeSensorServerAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HomeSensorServerAPI.Models.Dictionaries.ActuatorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("dictionary_actuator_types");
                });

            modelBuilder.Entity("HomeSensorServerAPI.Models.Dictionaries.NodeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("dictionary_node_types");
                });

            modelBuilder.Entity("HomeSensorServerAPI.Models.Dictionaries.SensorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("dictionary_sensor_types");
                });

            modelBuilder.Entity("HomeSensorServerAPI.Models.Dictionaries.UserGender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("dictionary_genders");
                });

            modelBuilder.Entity("HomeSensorServerAPI.Models.Dictionaries.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("dictionary_roles");
                });

            modelBuilder.Entity("HomeSensorServerAPI.Models.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ActuatorType");

                    b.Property<string>("Description");

                    b.Property<string>("GatewayAddress");

                    b.Property<string>("Identifier");

                    b.Property<string>("IpAddress");

                    b.Property<bool>("IsOn");

                    b.Property<string>("LoginName");

                    b.Property<string>("LoginPassword");

                    b.Property<string>("Name");

                    b.Property<int?>("NodeType");

                    b.Property<int?>("SensorType");

                    b.HasKey("Id");

                    b.ToTable("nodes");
                });

            modelBuilder.Entity("HomeSensorServerAPI.Models.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Data");

                    b.Property<string>("Identifier");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.ToTable("sensors");
                });

            modelBuilder.Entity("HomeSensorServerAPI.Models.StreamingDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConnectionString")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("Login");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("streaming_devices");
                });

            modelBuilder.Entity("HomeSensorServerAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthdate");

                    b.Property<string>("Email");

                    b.Property<int?>("Gender");

                    b.Property<DateTime?>("JoinDate");

                    b.Property<DateTime?>("LastInvalidLogin");

                    b.Property<DateTime?>("LastValidLogin");

                    b.Property<string>("Lastname");

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password")
                        .HasMaxLength(100);

                    b.Property<string>("PhotoUrl");

                    b.Property<int?>("Role");

                    b.HasKey("Id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
